---
title: "Homework8"
author: "hg.park"
date: "2024-09-10"
categories: [Homework]
jupyter: python3
---

# Logistic Regression

## Data Exploration

종속변수 :  
- 백혈병 세포 관측 불가 여부 (REMISS), 1이면 관측 안됨을 의미

독립변수 :  
- 골수의 세포성 (CELL)  
- 골수편의 백혈구 비율 (SMEAR)  
- 골수의 백혈병 세포 침투 비율 (INFIL)  
- 골수 백혈병 세포의 라벨링 인덱스 (LI)  
- 말초혈액의 백혈병 세포 수 (BLAST)  
- 치료 시작 전 최고 체온 (TEMP)  

## 문제 1. 데이터를 로드하고, 로지스틱 회귀모델을 적합하고, 회귀 표를 작성하세요.
```{python}
import numpy as np
import pandas as pd
import statsmodels.api as sm

df = pd.read_table('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/leukemia_remission.txt', delimiter='\t')
df

model = sm.formula.logit("REMISS ~ CELL + SMEAR + INFIL + LI + BLAST + TEMP", data=df).fit()
print(model.summary())
```

##  문제 2. 해당 모델은 통계적으로 유의한가요? 그 이유를 검정통계량를 사용해서 설명하시오.
```{python}
# 검정통계량 stat_value = -2(l(beta_hat)(0) - l(beta_hat))
# 검정통계량 stat_value = -2((LL-Null) - (Log-Likelihood))
stat_value = 2 * ((-17.186)-(-10.797))
stat_value
```
- LLR p-value: 0.04670
- 유의수준 5%일때 p-value이 0.04670으로 유의수준 보다 작기에 이 모델은 유의하다.


## 문제 3. 유의수준이 0.2를 기준으로 통계적으로 유의한 변수는 몇개이며, 어느 변수 인가요?
- 유의수준 0.2를 기준으로 통계적으로 유의한 변수는 2개, 유의한 변수는 LI(0.101), TEMP(0.198)이다.

## 문제 4. 다음 환자에 대한 오즈는 얼마인가요?

- CELL (골수의 세포성): 65%
- SMEAR (골수편의 백혈구 비율): 45%
- INFIL (골수의 백혈병 세포 침투 비율): 55%
- LI (골수 백혈병 세포의 라벨링 인덱스): 1.2
- BLAST (말초혈액의 백혈병 세포 수): 1.1세포/μL
- TEMP (치료 시작 전 최고 체온): 0.9
```{python}
# odds = exp(64.2581 + 30.8301 * x1 + 24.6863 * x2 + (-24.9745) * x3 + 4.3605 * x4 + (-0.0115) * x5 + (-100.1734) * x6)
my_odds=np.exp(64.2581 + 30.8301 * 0.65 + 24.6863 * 0.45 + (-24.9745) * 0.55 + 4.3605 * 1.2 + (-0.0115) * 1.1 + (-100.1734) * 0.9)
my_odds
```

## 문제 5. 위 환자의 혈액에서 백혈병 세포가 관측되지 않은 확률은 얼마인가요?
```{python}
my_odds / (my_odds+1) # 백혈병 세포가 관측되지 않을 확률 : 0.03677
```

## 문제 6. TEMP 변수의 계수는 얼마이며, 해당 계수를 사용해서 TEMP 변수가 백혈병 치료에 대한 영향을 설명하시오.

- TEMP 변수의 계수 : -100.1734
- Temp가 1도 증가할 때 마다 로그 오즈가 100.1734만큼 감소한다.
```{python}
np.exp(-100.1734) # 0에 가까운 수치
```
- 온도가 1단위 증가해도 백혈병 비관측에 대한 오즈가 증가하지 않는다.

## 문제 7. CELL 변수의 99% 오즈비에 대한 신뢰구간을 구하시오.
```{python}
from scipy.stats import norm
import numpy as np

# 오즈비의 신뢰구간 계산
z = norm.ppf(0.995)  # 99% 신뢰구간에 해당하는 z값 (정규분포의 99.5 퍼센타일)
coef = 30.8301  # 로그 오즈비 계수
std_err = 52.135  # 표준 오차

conf_int_low = np.exp(coef - z * std_err)  # 표준 오차를 이용한 계산
conf_int_high = np.exp(coef + z * std_err)
print(conf_int_low, conf_int_high)
```

## 문제 8. 주어진 데이터에 대하여 로지스틱 회귀 모델의 예측 확률을 구한 후, 50% 이상인 경우 1로 처리하여, 혼동 행렬를 구하시오.
```{python}
df['predicted'] = model.predict() >= 0.5
from sklearn.metrics import confusion_matrix
conf_matrix = confusion_matrix(df['REMISS'], df['predicted'])
print(conf_matrix)

# 실제 값과 예측 값
# True Positive (TP): 실제 값이 1이고 예측 값도 1인 경우
# True Negative (TN): 실제 값이 0이고 예측 값도 0인 경우
# False Positive (FP): 실제 값이 0인데 예측 값이 1인 경우
# False Negative (FN): 실제 값이 1인데 예측 값이 0인 경우

actual = df['REMISS']  # 실제 값 (정답)
predicted = model.predict() >= 0.5  # 예측값 (확률이 50% 이상일 때 1로 처리)

# 혼동 행렬 초기화
TP = TN = FP = FN = 0

# 혼동 행렬 계산
for a, p in zip(actual, predicted):
    if a == 1 and p == 1:
        TP += 1
    elif a == 0 and p == 0:
        TN += 1
    elif a == 0 and p == 1:
        FP += 1
    elif a == 1 and p == 0:
        FN += 1

# 결과 출력
conf_matrix = np.array([[TN, FP], [FN, TP]]).reshape(2,2)
print("Confusion Matrix:")
print(conf_matrix)
```

## 문제 9. 해당 모델의 Accuracy는 얼마인가요?
```{python}
from sklearn.metrics import confusion_matrix, accuracy_score, f1_score
accuracy1 = accuracy_score(df['REMISS'], df['predicted'])
accuracy2 = (conf_matrix[0, 0] + conf_matrix[1, 1]) / conf_matrix.sum()
print(accuracy1)
print(accuracy2)
```

## 문제 10. 해당 모델의 F1 Score를 구하세요.
```{python}
f1 = f1_score(df['REMISS'], df['predicted'])
print(f1)
```
